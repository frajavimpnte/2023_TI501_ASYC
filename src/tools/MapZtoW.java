package tools;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author TICS03
 */
public class MapZtoW extends javax.swing.JFrame {
    TP02_Problem07 problem = new TP02_Problem07(); 
    /**
     * Creates new form MapZtoW
     */
    public MapZtoW() {
        initComponents();
        
        problem.initZ();
        problem.computeW();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDraw = new javax.swing.JButton();
        pnlDrawZ = new javax.swing.JPanel();
        pnlDrawW = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDraw.setText("Draw");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });
        getContentPane().add(btnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        javax.swing.GroupLayout pnlDrawZLayout = new javax.swing.GroupLayout(pnlDrawZ);
        pnlDrawZ.setLayout(pnlDrawZLayout);
        pnlDrawZLayout.setHorizontalGroup(
            pnlDrawZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawZLayout.setVerticalGroup(
            pnlDrawZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDrawZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 300, 300));

        javax.swing.GroupLayout pnlDrawWLayout = new javax.swing.GroupLayout(pnlDrawW);
        pnlDrawW.setLayout(pnlDrawWLayout);
        pnlDrawWLayout.setHorizontalGroup(
            pnlDrawWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        pnlDrawWLayout.setVerticalGroup(
            pnlDrawWLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(pnlDrawW, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 300, 300));

        setBounds(0, 0, 656, 488);
    }// </editor-fold>//GEN-END:initComponents

    private void drawAxis( javax.swing.JPanel panel) {
        Graphics2D g = (Graphics2D) panel.getGraphics();
      
        g.setColor(new Color(50, 90, 20));
        g.fillRect(0,0, 300, 300);
        
        g.setColor(Color.white);
        
        // draw x axis, from  (0,0) to  (20, 0)  
        g.drawLine(
                Coordinate.toScreenX(Coordinate.XMIN),
                Coordinate.toScreenY(0.0f),
                Coordinate.toScreenX(Coordinate.XMAX),
                Coordinate.toScreenY(0.0f)
        );
        
        for (float dx = Coordinate.XMIN; dx < Coordinate.XMAX; dx += 1.0) {
            g.drawLine(
                Coordinate.toScreenX(dx),
                Coordinate.toScreenY(0),
                Coordinate.toScreenX(dx),
                Coordinate.toScreenY(0.5f)
            );
        }
        
        // draw y axis, from  (0,0) to  (0, 20)  
        g.drawLine(
                Coordinate.toScreenX(0.0f),
                Coordinate.toScreenY(Coordinate.YMIN),
                Coordinate.toScreenX(0.00f),
                Coordinate.toScreenY(Coordinate.YMAX)
        );
        
        for (float dy = Coordinate.YMIN; dy < Coordinate.YMAX; dy += 1.0) {
            g.drawLine(
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(dy),
                Coordinate.toScreenX(0.5f),
                Coordinate.toScreenY(dy)
            );
        } 
    }
    
    private void drawZ() {
         Graphics2D g = (Graphics2D) pnlDrawZ.getGraphics();
         
         Font sanSerifFont = new Font("SanSerif", Font.PLAIN, 14);
         g.setFont(sanSerifFont);
         
         g.setColor(Color.white);
         for(ComplexNumber c:problem.z) {
             g.drawString("o",
                     Coordinate.toScreenX( c.getA() ),
                     Coordinate.toScreenX( c.getB() ) 
             );
         }
    }
    
      private void drawW() {
         Graphics2D g = (Graphics2D) pnlDrawW.getGraphics();
         
         Font sanSerifFont = new Font("SanSerif", Font.PLAIN, 14);
         g.setFont(sanSerifFont);
         
         g.setColor(Color.white);
         for(ComplexNumber c:problem.z) {
             g.drawString("o",
                     Coordinate.toScreenX( c.getA() ),
                     Coordinate.toScreenX( c.getB() ) 
             );
         }
    }
    
    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        // TODO add your handling code here:
        drawAxis(pnlDrawZ);
        drawAxis(pnlDrawW);
        
        drawZ();
    }//GEN-LAST:event_btnDrawActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapZtoW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDraw;
    private javax.swing.JPanel pnlDrawW;
    private javax.swing.JPanel pnlDrawZ;
    // End of variables declaration//GEN-END:variables
}
