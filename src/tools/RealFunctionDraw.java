/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author TICS03
 */
public class RealFunctionDraw extends javax.swing.JFrame {

    /**
     * Creates new form House
     */
    public RealFunctionDraw() {
        initComponents();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDraw = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDrawMouseClicked(evt);
            }
        });
        getContentPane().add(pnlDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 470));

        setBounds(0, 0, 640, 480);
    }// </editor-fold>//GEN-END:initComponents

    private void drawAxis() {
        Graphics2D g = (Graphics2D) pnlDraw.getGraphics();
      
        g.setColor(Color.white);
        g.fillRect(0,0, 640, 480);
        
        g.setColor(Color.black);
        //g.drawRect(0,0, 300, 300);
        
        // (0,0)  (20, 0)  x
        g.drawLine(
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(0),
                Coordinate.toScreenX(20),
                Coordinate.toScreenY(0)
        );
        for (float dx = 0; dx < Coordinate.XMAX; dx += 1.0) {
            g.drawLine(
                Coordinate.toScreenX(dx),
                Coordinate.toScreenY(0),
                Coordinate.toScreenX(dx),
                Coordinate.toScreenY(1)
            );
        }
        // (0,0)  (0, 20)  y
        g.drawLine(
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(0),
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(20)
        );
        for (float dy = 0; dy < Coordinate.YMAX; dy += 1.0) {
            g.drawLine(
                Coordinate.toScreenX(0),
                Coordinate.toScreenY(dy),
                Coordinate.toScreenX(1),
                Coordinate.toScreenY(dy)
            );
        }
    }
    private void drawFunction() {
        // funcion y = 2x + x^2 + 1
        int nPoints = 10;
        float dx = Coordinate.XMAX/10;
        
        float xr[] = new float[nPoints];
        float yr[] = new float[nPoints];
        for (int i = 0; i < nPoints; i++) {
            xr[i] = i*dx;
            yr[i] = 2*xr[i] + 0.1f*xr[i]*xr[i] + 1;
        }
        
        // draw
        Graphics2D g = (Graphics2D) pnlDraw.getGraphics();
        g.setColor(Color.black);
        for (int i = 0; i < nPoints-1; i++) {
            g.drawLine(
                Coordinate.toScreenX(xr[i]),
                Coordinate.toScreenY(yr[i]),
                Coordinate.toScreenX(xr[i+1]),
                Coordinate.toScreenY(yr[i+1])
            );
        }
    }
    private void pnlDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDrawMouseClicked
        // TODO add your handling code here:
        drawAxis();
        drawFunction();

    }//GEN-LAST:event_pnlDrawMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealFunctionDraw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {          
                new RealFunctionDraw().setVisible(true);
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlDraw;
    // End of variables declaration//GEN-END:variables
}
